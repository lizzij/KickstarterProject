install.packages("ggthemes")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(anytime)
library(lubridate)
library(rworldmap)
install.packages("rworldmap")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(anytime)
library(lubridate)
library(rworldmap)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggthemes)
library(anytime)
library(lubridate)
library(rworldmap)
data_source_1 <- read.csv("Kickstarter001.csv", header = TRUE, sep = ",")
data_source_1 <- read.csv("./data/Kickstarter001.csv", header = TRUE, sep = ",")
data_source_2 <- read.csv("./data/Kickstarter002.csv", header = TRUE, sep = ",")
raw_data <- rbind(data_source_1, data_source_2)
live_data <- raw_data %>% filter(raw_data$state == "live")
raw_data$category <- raw_data$category %>%
str_extract("slug\":\".+\",\"") %>%
str_replace_all("\",\"", "") %>%
str_replace_all("slug\":\"", "") %>%
str_replace("/.+", "")
raw_data$location <- raw_data$location %>%
str_extract("name\":\".+\",\"") %>%
str_replace("\",\".+", "") %>%
str_replace_all("name\":\"", "")
raw_data$creator <- NULL
raw_data$photo <- NULL
raw_data$slug <- NULL
raw_data$urls <- NULL
raw_data$preparation_duration <- raw_data$launched_at - raw_data$created_at
raw_data$preparation_duration_r <- seconds_to_period(raw_data$preparation_duration)
raw_data$preparation_duration <- raw_data$launched_at - raw_data$created_at
raw_data$preparation_duration_r <- seconds_to_period(raw_data$preparation_duration)
raw_data$launch_duration <- raw_data$deadline - raw_data$launched_at
raw_data$launch_duration_r <- seconds_to_period(raw_data$launch_duration)
raw_data$launch_duration_r <- day(raw_data$launch_duration_r)
raw_data$created_at_readable <- anytime(raw_data$created_at)
raw_data$deadline_readable <- anytime(raw_data$deadline)
raw_data$launched_at_readable <- anytime(raw_data$launched_at)
raw_data$preparation_duration_r <- NULL
clean_data <- raw_data
write.csv(clean_data, "./data/data.csv")
head(clean_data)
status_prjects <- clean_data %>%
group_by(clean_data$state) %>%
summarise(count = n()) %>%
arrange(desc(count))
head(status_prjects)
status_prjects <- clean_data %>%
group_by(clean_data$state) %>%
summarise(count = n()) %>%
arrange(desc(count))
head(status_prjects)
ggplot(status_prjects, aes(reorder(status_prjects$`clean_data$state`, -count), count, fill=count)) + geom_bar(stat="identity") +
ggtitle("Projects by Status") + xlab("Project Status") + ylab("Frequency") +
geom_text(aes(label=count), vjust=-0.5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12), legend.position="null") +
scale_fill_gradient(low="skyblue1", high="royalblue4")
catagory_projects <- clean_data %>%
group_by(clean_data$category) %>%
summarise(count = n()) %>%
arrange(desc(count))
head(catagory_projects)
ggplot(catagory_projects, aes(reorder(catagory_projects$`clean_data$category`, -count), count, fill=count)) + geom_bar(stat="identity") +
ggtitle("Projects by Category") + xlab("Project Category") + ylab("Frequency") +
geom_text(aes(label=count), vjust=-0.5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12, angle=90), legend.position="null") +
scale_fill_gradient(low="skyblue1", high="royalblue4")
pledged_category <- clean_data %>%
group_by(clean_data$category) %>%
summarise(total = sum(usd_pledged)) %>%
arrange(desc(total))
head(pledged_category)
ggplot(pledged_category, aes(reorder(pledged_category$`clean_data$category`, -total), total/1000000, fill=total)) + geom_bar(stat="identity") +
ggtitle("Total Amount Pledged by Category") + xlab("Project Category") +
ylab("Amount Pledged (USD millions)") +
geom_text(aes(label=paste0("$", round(total/1000000,1))), vjust=-0.5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12, angle=90), legend.position="null") +
scale_fill_gradient(low="skyblue1", high="royalblue4")
pledged_avg_category <- clean_data %>%
group_by(clean_data$category) %>%
summarise(pledged = sum(usd_pledged), backers=sum(backers_count)) %>%
mutate(avg = pledged/backers) %>%
arrange(desc(avg))
head(pledged_avg_category)
ggplot(pledged_avg_category, aes(reorder(pledged_avg_category$`clean_data$category`, -avg), avg, fill=avg)) + geom_bar(stat="identity") +
ggtitle("Average Amount Pledged per Backer") + xlab("Project Category") +
ylab("Amount Pledged (USD)") +
geom_text(aes(label=paste0("$", round(avg,2))), vjust=-0.5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12, angle=90), legend.position="null") +
scale_fill_gradient(low="skyblue1", high="royalblue4")
top_ten_success <- clean_data[clean_data$state == "successful",] %>%
select("category", "goal", "state") %>%
arrange(desc(goal))
head(top_ten_success)
goal_avg <- clean_data %>%
group_by(category) %>%
summarise(goals = sum(goal), projects = n()) %>%
mutate(avg = goals/projects) %>%
arrange(desc(avg))
head(goal_avg)
ggplot(goal_avg, aes(reorder(goal_avg$category, -avg), avg, fill=avg)) + geom_bar(stat="identity") +
ggtitle("Average Project Goal") + xlab("Project Category") + ylab("Project Goal (USD)") +
geom_text(aes(label=paste0("$", round(avg,0))), vjust=-0.5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12, angle=90), legend.position="null") +
scale_fill_gradient(low="skyblue1", high="royalblue4")
perc_projects <- clean_data %>%
filter(state %in% c("successful", "failed")) %>%
group_by(category, state) %>%
summarize(count=n()) %>%
mutate(pct=count/sum(count)) %>%
arrange(desc(state), pct)
head(perc_projects)
ggplot(perc_projects, aes(perc_projects$category, pct, fill=state)) + geom_bar(stat="identity") +
ggtitle("Success vs. Failure Rate by Project Category") +
xlab("Project Category") + ylab("Percentage") + scale_y_continuous(labels=scales::percent) +
scale_fill_discrete(name="Project Status", breaks=c("successful", "failed"),
labels=c("Success", "Failure")) +
geom_text(aes(label=paste0(round(pct*100,1),"%")), position=position_stack(vjust=0.5),
colour="white", size=5) + theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"),
axis.text.x=element_text(size=12), legend.position="bottom",
legend.title=element_text(size=12, face="bold")) + coord_flip()
perc_length <- clean_data %>%
filter(state %in% c("successful", "failed"), launch_duration_r < 61) %>%
group_by(launch_duration_r, state) %>%
summarize(count=n()) %>%
mutate(pct=count/sum(count))
head(perc_length)
ggplot(perc_length[perc_length$state=="successful",], aes(launch_duration_r, pct)) +
geom_point(colour="royalblue4", size=2.5) + ggtitle("Success Rate vs. Project Length") +
xlab("Project Length (Days)") + ylab("Success Rate (%)") +
scale_x_continuous(breaks=c(0,10,20,30,40,50,60)) + geom_vline(xintercept=30, colour="red") +
theme_economist() +
theme(plot.title=element_text(hjust=0.5), axis.title=element_text(size=12, face="bold"))
countries_freq <- clean_data %>%
group_by(country) %>%
summarize(count=n())
countries.match <- joinCountryData2Map(countries_freq, joinCode="ISO2", nameJoinColumn="country")
mapCountryData(countries.match, nameColumnToPlot="count",
mapTitle="Number of Projects by Country", catMethod="logFixedWidth",
colourPalette="heat")
